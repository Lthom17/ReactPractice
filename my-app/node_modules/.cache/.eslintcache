[{"/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/index.js":"1","/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/App.js":"2","/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/components/Title.js":"3","/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/components/Modal.js":"4","/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/components/EventList.js":"5","/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/components/NewEventForm.js":"6"},{"size":222,"mtime":1643396390589,"results":"7","hashOfConfig":"8"},{"size":1490,"mtime":1643734738271,"results":"9","hashOfConfig":"8"},{"size":281,"mtime":1643395691020,"results":"10","hashOfConfig":"8"},{"size":481,"mtime":1643734681151,"results":"11","hashOfConfig":"8"},{"size":590,"mtime":1643735634339,"results":"12","hashOfConfig":"8"},{"size":1682,"mtime":1643735557156,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"188dhsv",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},"/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/index.js",[],"/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/App.js",[],["29","30"],"/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/components/Title.js",[],["31","32"],"/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/components/Modal.js",[],"/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/components/EventList.js",[],"/Users/A1623784/Documents/Practice/ReactPractice/my-app/src/components/NewEventForm.js",["33"],"import React from 'react';\nimport '../styles/NewEventForm.css';\nimport { useState } from 'react';\n\nexport default function NewEventForm({ eventId, addEvent }) {\n\n    function pad(d) {\n        return (d < 10) ? '0' + d.toString() : d.toString();\n    }\n\n\n\n    const [title, setTitle] = useState('');\n    const [date, setDate] = useState('');\n    const [location, setLocation] = useState('Manchester');\n\n\n    const resetForm = () => {\n        setTitle('');\n        setDate('');\n        setLocation('Manchester')\n    }\n\n    const handleSubmit = (e) => {\n\n        e.preventDefault();\n\n\n\n        const event = {\n            title: title,\n            date: date,\n            location: location,\n            id: eventId\n        }\n\n        addEvent(event);\n\n        console.log(event);\n\n        resetForm();\n\n    }\n\n\n\n    return (\n        <form className='new-event-form' onSubmit={handleSubmit}>\n            <label>\n                <span>Event Title:</span>\n                <input type=\"text\" onChange={(e) => setTitle(e.target.value)} value={title}></input>\n            </label>\n            <label>\n                <span>Event Date:</span>\n                <input type=\"date\" onChange={(e) => setDate(e.target.value)} value={date}></input>\n            </label>\n            <label>\n                <span>Event Location</span>\n                <select onChange={(e) => setLocation(e.target.value)}>\n                    <option value='manchester'>Manchester</option>\n                    <option value='london'>London</option>\n                    <option value='cardiff'>Cardiff</option>\n                </select>\n            </label>\n            <button>Submit</button>\n        </form>\n    )\n}\n",{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":7,"column":14,"nodeType":"42","messageId":"43","endLine":7,"endColumn":17},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],["44"],["45"],"no-unused-vars","'pad' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]